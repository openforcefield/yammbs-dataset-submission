name: Test Self-Hosted Runner
on:
  workflow_dispatch:
  pull_request:
    branches:
      - "master"

defaults:
  run:
    shell: bash -l {0}

jobs:
  start-aws-runner:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      mapping: ${{ steps.aws-start.outputs.mapping }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::649715411074:role/gh-actions-runner-role
          aws-region: us-east-1
      - name: Create cloud runner
        id: aws-start
        uses: omsf-eco-infra/gha-runner@v0.2.0
        with:
          provider: "aws"
          action: "start"
          aws_image_id: ami-0d5079d9be06933e5
          aws_instance_type: t3.large
          aws_region_name: us-east-1
          aws_home_dir: /home/ubuntu
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

  self-hosted-test:
    runs-on: self-hosted
    needs:
      - start-aws-runner
    steps:
      - uses: actions/checkout@v4

      - name: Setup Conda Environment
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: devtools/env.yaml

      - name: Run test benchmark
        env:
            LICENSE: ${{ secrets.OE_LICENSE }}
        shell: bash -l {0}
        run: |
          set -e
          echo "$LICENSE" > /tmp/oe_license.txt
          export OE_LICENSE=/tmp/oe_license.txt
          python main.py test.yaml $(nproc)
          rm $OE_LICENSE

  stop-aws-runner:
    runs-on: ubuntu-latest
    permissions:
        id-token: write
        contents: read
    needs:
      - start-aws-runner
      - self-hosted-test
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::649715411074:role/gh-actions-runner-role
          aws-region: us-east-1
      - name: Stop instances
        uses: omsf-eco-infra/gha-runner@v0.2.0
        with:
          provider: "aws"
          action: "stop"
          instance_mapping: ${{ needs.start-aws-runner.outputs.mapping }}
          aws_region_name: us-east-1
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
